{"ast":null,"code":"var _jsxFileName = \"/Users/jackson2tall/Desktop/projectsPostCodesmith/scrimba-tenzies/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Die from './components/Die.jsx';\nimport ScoreBoard from './components/ScoreBoard.jsx';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [dice, setDice] = useState(allNewDice());\n  const [score, setScore] = useState(0);\n  const [tenzies, setTenzies] = useState(false);\n  const [scoreBoard, setScoreBoard] = useState(() => JSON.parse(localStorage.getItem('scores')) || []);\n  useEffect(() => {\n    localStorage.setItem('scores', JSON.stringify(scoreBoard));\n  }, [scoreBoard]);\n  useEffect(() => {\n    let dupe = 0;\n    for (let i = 0; i < dice.length; i++) {\n      if (dice[i].isHeld) {\n        dupe += 1;\n      }\n    }\n    console.log(dupe);\n    dupe === 10 ? setTenzies(true) : setTenzies(false);\n    console.log(tenzies);\n  }, [dice]);\n  function allNewDice() {\n    const numArr = [];\n    for (let i = 0; i < 10; i++) {\n      numArr.push({\n        value: Math.ceil(Math.random() * 6),\n        isHeld: false,\n        id: nanoid()\n      });\n    }\n    return numArr;\n  }\n  function reroll() {\n    if (!tenzies) {\n      setScore(prevScore => prevScore + 1);\n      setDice(prevDice => prevDice.map(die => die.isHeld ? die : {\n        ...die,\n        value: Math.ceil(Math.random() * 6)\n      }));\n    } else {\n      setScore(0);\n      setDice(allNewDice());\n    }\n  }\n  function holdDie(id) {\n    setDice(prevDice => prevDice.map(die => die.id === id ? {\n      ...die,\n      isHeld: !die.isHeld\n    } : die));\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"instructions\",\n      children: \"Roll until all dice are the same. Click each die to freeze it at its current value between rolls.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dice\",\n      children: dice.map(die => /*#__PURE__*/_jsxDEV(Die, {\n        isHeld: die.isHeld,\n        value: die.value,\n        holdDie: () => holdDie(die.id)\n      }, die.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => reroll(),\n      className: \"roll-dice\",\n      children: tenzies ? 'Play Again?' : 'Roll'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [tenzies ? 'Final ' : '', \"Score\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScoreBoard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"60ZK4074iDhZbEuakkfwAo4W0YE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Die","ScoreBoard","nanoid","jsxDEV","_jsxDEV","App","_s","dice","setDice","allNewDice","score","setScore","tenzies","setTenzies","scoreBoard","setScoreBoard","JSON","parse","localStorage","getItem","setItem","stringify","dupe","i","length","isHeld","console","log","numArr","push","value","Math","ceil","random","id","reroll","prevScore","prevDice","map","die","holdDie","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/jackson2tall/Desktop/projectsPostCodesmith/scrimba-tenzies/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Die from './components/Die.jsx';\nimport ScoreBoard from './components/ScoreBoard.jsx';\nimport { nanoid } from 'nanoid';\n\nfunction App() {\n  const [dice, setDice] = useState(allNewDice());\n  const [score, setScore] = useState(0);\n  const [tenzies, setTenzies] = useState(false);\n  const [scoreBoard, setScoreBoard] = useState(\n    () => JSON.parse(localStorage.getItem('scores')) || []\n  );\n\n  useEffect(() => {\n    localStorage.setItem('scores', JSON.stringify(scoreBoard));\n  }, [scoreBoard]);\n\n  useEffect(() => {\n    let dupe = 0;\n    for (let i = 0; i < dice.length; i++) {\n      if (dice[i].isHeld) {\n        dupe += 1;\n      }\n    }\n    console.log(dupe);\n    dupe === 10 ? setTenzies(true) : setTenzies(false);\n    console.log(tenzies);\n  }, [dice]);\n\n  function allNewDice() {\n    const numArr = [];\n    for (let i = 0; i < 10; i++) {\n      numArr.push({\n        value: Math.ceil(Math.random() * 6),\n        isHeld: false,\n        id: nanoid(),\n      });\n    }\n    return numArr;\n  }\n\n  function reroll() {\n    if (!tenzies) {\n      setScore((prevScore) => prevScore + 1);\n      setDice((prevDice) =>\n        prevDice.map((die) =>\n          die.isHeld ? die : { ...die, value: Math.ceil(Math.random() * 6) }\n        )\n      );\n    } else {\n      setScore(0);\n      setDice(allNewDice());\n    }\n  }\n\n  function holdDie(id) {\n    setDice((prevDice) =>\n      prevDice.map((die) =>\n        die.id === id ? { ...die, isHeld: !die.isHeld } : die\n      )\n    );\n  }\n\n  return (\n    <main className='main'>\n      <p className='instructions'>\n        Roll until all dice are the same. Click each die to freeze it at its\n        current value between rolls.\n      </p>\n      <div className='dice'>\n        {dice.map((die) => (\n          <Die\n            isHeld={die.isHeld}\n            value={die.value}\n            key={die.id}\n            holdDie={() => holdDie(die.id)}\n          />\n        ))}\n      </div>\n      <button onClick={() => reroll()} className='roll-dice'>\n        {tenzies ? 'Play Again?' : 'Roll'}\n      </button>\n      <div className='score'>\n        <h4>{tenzies ? 'Final ' : ''}Score</h4>\n        <h3>{score}</h3>\n      </div>\n\n      <ScoreBoard />\n    </main>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}