{"ast":null,"code":"var _jsxFileName = \"/Users/jackson2tall/Desktop/projectsPostCodesmith/scrimba-tenzies/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Die from './components/Die.jsx';\nimport ScoreBoard from './components/ScoreBoard.jsx';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [dice, setDice] = useState(allNewDice());\n  const [currentScore, setCurrentScore] = useState(0);\n  const [tenzies, setTenzies] = useState(false);\n  const [firstClick, setFirstClick] = useState(0);\n  const [player, setPlayer] = useState({\n    name: '',\n    saved: false\n  });\n  const [scoreBoard, setScoreBoard] = useState(() => JSON.parse(localStorage.getItem('scores')) || [{\n    playerName: '',\n    totalScore: 0,\n    numberSaved: '',\n    id: 0\n  }]);\n  useEffect(() => {\n    console.log(scoreBoard);\n    localStorage.setItem('scores', JSON.stringify(scoreBoard));\n  }, [scoreBoard]);\n  useEffect(() => {\n    let dupe = 0;\n    for (let i = 0; i < dice.length; i++) {\n      if (dice[i].isHeld) {\n        dupe += 1;\n      }\n    }\n    dupe === 0 && setFirstClick(0);\n    dupe === 10 ? setTenzies(true) : setTenzies(false);\n  }, [dice]);\n  useEffect(() => {\n    if (tenzies) {\n      if (scoreBoard.length <= 10) {\n        setScoreBoard(prevScoreBoard =>\n        // check if the current score is lower than the last place score on the scoreboard array\n        // if it is, reassign the last score as the current score\n        // then sort\n        [...prevScoreBoard, {\n          playerName: player.name,\n          totalScore: currentScore,\n          numberSaved: firstClick,\n          id: nanoid()\n        }]);\n      } else if (scoreBoard[10].totalScore)\n        // score < scoreBoard[scoreBoard.length - 1].totalScore\n\n        console.log(scoreBoard);\n    }\n  }, [tenzies]);\n  function allNewDice() {\n    const numArr = [];\n    for (let i = 0; i < 10; i++) {\n      numArr.push({\n        value: Math.ceil(Math.random() * 6),\n        isHeld: false,\n        id: nanoid()\n      });\n    }\n    return numArr;\n  }\n  function reroll() {\n    if (!tenzies) {\n      setCurrentScore(prevScore => prevScore + 1);\n      setDice(prevDice => prevDice.map(die => die.isHeld ? die : {\n        ...die,\n        value: Math.ceil(Math.random() * 6)\n      }));\n    } else {\n      setPlayer({\n        name: '',\n        saved: false\n      });\n      setCurrentScore(0);\n      setFirstClick(0);\n      setDice(allNewDice());\n    }\n  }\n  function holdDie(myDie) {\n    if (player.saved && (firstClick === 0 || firstClick === myDie.value)) {\n      setFirstClick(myDie.value);\n      setDice(prevDice => prevDice.map(die => die.id === myDie.id ? {\n        ...die,\n        isHeld: !die.isHeld\n      } : die));\n    }\n  }\n  function saveName(e) {\n    const {\n      value\n    } = e.target;\n    if (value.length < 11) {\n      setPlayer(prevPlayer => ({\n        ...prevPlayer,\n        name: value\n      }));\n    }\n    e.preventDefault();\n  }\n  function startGame(e) {\n    player.name ? setPlayer(prevPlayer => ({\n      ...prevPlayer,\n      saved: true\n    })) : alert('input name');\n    e.preventDefault();\n  }\n\n  // async function newScore() {}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Tenzies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"instructions\",\n        children: \"Roll until all dice are the same. Click each die to freeze it at its current value between rolls.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice\",\n        children: dice.map(die => /*#__PURE__*/_jsxDEV(Die, {\n          isHeld: die.isHeld,\n          value: die.value,\n          holdDie: () => holdDie(die),\n          playerSaved: player.saved\n        }, die.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: !player.saved ? /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter Name\",\n            id: \"enterName\",\n            className: \"player-input\",\n            value: player.name,\n            name: \"topText\",\n            onChange: saveName,\n            onFocus: e => e.target.placeholder = '',\n            onBlurCapture: e => e.target.placeholder = 'Enter Name'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startGame,\n            className: \"save-name-button\",\n            children: \"Start Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => reroll(),\n            className: \"roll-dice\",\n            children: tenzies ? 'Play Again?' : 'Roll'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"current-score\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [tenzies ? 'Final ' : '', \"Score\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: currentScore\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), scoreBoard[0] && tenzies && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scoreboard\",\n      children: /*#__PURE__*/_jsxDEV(ScoreBoard, {\n        scoreBoard: scoreBoard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"m9+qvEgiZyi6qIY/66jnk7yRws0=\");\n_c = App;\nexport default App;\n\n//keep the screen size the same when changing to a smaller size\n// create a scoreboard with the top 10 scores\n// add a timer feature that multiplies with the score to provide a final score\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Die","ScoreBoard","nanoid","jsxDEV","_jsxDEV","App","_s","dice","setDice","allNewDice","currentScore","setCurrentScore","tenzies","setTenzies","firstClick","setFirstClick","player","setPlayer","name","saved","scoreBoard","setScoreBoard","JSON","parse","localStorage","getItem","playerName","totalScore","numberSaved","id","console","log","setItem","stringify","dupe","i","length","isHeld","prevScoreBoard","numArr","push","value","Math","ceil","random","reroll","prevScore","prevDice","map","die","holdDie","myDie","saveName","e","target","prevPlayer","preventDefault","startGame","alert","children","className","fileName","_jsxFileName","lineNumber","columnNumber","playerSaved","type","placeholder","onChange","onFocus","onBlurCapture","onClick","_c","$RefreshReg$"],"sources":["/Users/jackson2tall/Desktop/projectsPostCodesmith/scrimba-tenzies/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Die from './components/Die.jsx';\nimport ScoreBoard from './components/ScoreBoard.jsx';\nimport { nanoid } from 'nanoid';\n\nfunction App() {\n  const [dice, setDice] = useState(allNewDice());\n  const [currentScore, setCurrentScore] = useState(0);\n  const [tenzies, setTenzies] = useState(false);\n  const [firstClick, setFirstClick] = useState(0);\n  const [player, setPlayer] = useState({ name: '', saved: false });\n  const [scoreBoard, setScoreBoard] = useState(\n    () =>\n      JSON.parse(localStorage.getItem('scores')) || [\n        { playerName: '', totalScore: 0, numberSaved: '', id: 0 },\n      ]\n  );\n\n  useEffect(() => {\n    console.log(scoreBoard);\n    localStorage.setItem('scores', JSON.stringify(scoreBoard));\n  }, [scoreBoard]);\n\n  useEffect(() => {\n    let dupe = 0;\n    for (let i = 0; i < dice.length; i++) {\n      if (dice[i].isHeld) {\n        dupe += 1;\n      }\n    }\n    dupe === 0 && setFirstClick(0);\n    dupe === 10 ? setTenzies(true) : setTenzies(false);\n  }, [dice]);\n\n  useEffect(() => {\n    if (tenzies) {\n      if (scoreBoard.length <= 10) {\n        setScoreBoard((prevScoreBoard) =>\n          // check if the current score is lower than the last place score on the scoreboard array\n          // if it is, reassign the last score as the current score\n          // then sort\n          [\n            ...prevScoreBoard,\n            {\n              playerName: player.name,\n              totalScore: currentScore,\n              numberSaved: firstClick,\n              id: nanoid(),\n            },\n          ]\n        );\n      } else if (scoreBoard[10].totalScore)\n        // score < scoreBoard[scoreBoard.length - 1].totalScore\n\n        console.log(scoreBoard);\n    }\n  }, [tenzies]);\n\n  function allNewDice() {\n    const numArr = [];\n    for (let i = 0; i < 10; i++) {\n      numArr.push({\n        value: Math.ceil(Math.random() * 6),\n        isHeld: false,\n        id: nanoid(),\n      });\n    }\n    return numArr;\n  }\n\n  function reroll() {\n    if (!tenzies) {\n      setCurrentScore((prevScore) => prevScore + 1);\n      setDice((prevDice) =>\n        prevDice.map((die) =>\n          die.isHeld ? die : { ...die, value: Math.ceil(Math.random() * 6) }\n        )\n      );\n    } else {\n      setPlayer({ name: '', saved: false });\n      setCurrentScore(0);\n      setFirstClick(0);\n      setDice(allNewDice());\n    }\n  }\n\n  function holdDie(myDie) {\n    if (player.saved && (firstClick === 0 || firstClick === myDie.value)) {\n      setFirstClick(myDie.value);\n      setDice((prevDice) =>\n        prevDice.map((die) =>\n          die.id === myDie.id ? { ...die, isHeld: !die.isHeld } : die\n        )\n      );\n    }\n  }\n\n  function saveName(e) {\n    const { value } = e.target;\n    if (value.length < 11) {\n      setPlayer((prevPlayer) => ({ ...prevPlayer, name: value }));\n    }\n    e.preventDefault();\n  }\n\n  function startGame(e) {\n    player.name\n      ? setPlayer((prevPlayer) => ({ ...prevPlayer, saved: true }))\n      : alert('input name');\n    e.preventDefault();\n  }\n\n  // async function newScore() {}\n\n  return (\n    <div>\n      <h1 className='title'>Tenzies</h1>\n      <main className='main'>\n        <p className='instructions'>\n          Roll until all dice are the same. Click each die to freeze it at its\n          current value between rolls.\n        </p>\n        <div className='dice'>\n          {dice.map((die) => (\n            <Die\n              isHeld={die.isHeld}\n              value={die.value}\n              key={die.id}\n              holdDie={() => holdDie(die)}\n              playerSaved={player.saved}\n            />\n          ))}\n        </div>\n        <div>\n          {!player.saved ? (\n            <form>\n              <input\n                type='text'\n                placeholder='Enter Name'\n                id='enterName'\n                className='player-input'\n                value={player.name}\n                name='topText'\n                onChange={saveName}\n                onFocus={(e) => (e.target.placeholder = '')}\n                onBlurCapture={(e) => (e.target.placeholder = 'Enter Name')}\n              ></input>\n              <button onClick={startGame} className='save-name-button'>\n                Start Game\n              </button>\n            </form>\n          ) : (\n            <div>\n              <button onClick={() => reroll()} className='roll-dice'>\n                {tenzies ? 'Play Again?' : 'Roll'}\n              </button>\n              <div className='current-score'>\n                <h4>{tenzies ? 'Final ' : ''}Score</h4>\n                <h3>{currentScore}</h3>\n              </div>\n            </div>\n          )}\n        </div>\n      </main>\n      <br />\n      {scoreBoard[0] && tenzies && (\n        <div className='scoreboard'>\n          <ScoreBoard scoreBoard={scoreBoard} />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\n//keep the screen size the same when changing to a smaller size\n// create a scoreboard with the top 10 scores\n// add a timer feature that multiplies with the score to provide a final score\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}