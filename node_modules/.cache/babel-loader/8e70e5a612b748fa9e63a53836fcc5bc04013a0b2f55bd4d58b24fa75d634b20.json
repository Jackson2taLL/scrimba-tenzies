{"ast":null,"code":"var _jsxFileName = \"/Users/jackson2tall/Desktop/projectsPostCodesmith/scrimba-tenzies/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Die from './components/Die.jsx';\nimport ScoreBoard from './components/ScoreBoard.jsx';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [dice, setDice] = useState(allNewDice());\n  const [score, setScore] = useState(0);\n  const [tenzies, setTenzies] = useState(false);\n  const [firstClick, setFirstClick] = useState(0);\n  const [scoreBoard, setScoreBoard] = useState(() => JSON.parse(localStorage.getItem('scores')) || []);\n  useEffect(() => {\n    localStorage.setItem('scores', JSON.stringify(scoreBoard));\n  }, [scoreBoard]);\n  useEffect(() => {\n    let dupe = 0;\n    for (let i = 0; i < dice.length; i++) {\n      if (dice[i].isHeld) {\n        dupe += 1;\n      }\n    }\n    dupe === 0 && setFirstClick(0);\n    dupe === 10 ? setTenzies(true) : setTenzies(false);\n  }, [dice]);\n  function allNewDice() {\n    const numArr = [];\n    for (let i = 0; i < 10; i++) {\n      numArr.push({\n        value: Math.ceil(Math.random() * 6),\n        isHeld: false,\n        id: nanoid()\n      });\n    }\n    return numArr;\n  }\n  function reroll() {\n    if (!tenzies) {\n      setScore(prevScore => prevScore + 1);\n      setDice(prevDice => prevDice.map(die => die.isHeld ? die : {\n        ...die,\n        value: Math.ceil(Math.random() * 6)\n      }));\n    } else {\n      setScore(0);\n      setFirstClick(0);\n      setDice(allNewDice());\n    }\n  }\n  function holdDie(myDie) {\n    if (firstClick === 0 || firstClick === myDie.value) {\n      setFirstClick(myDie.value);\n      setDice(prevDice => prevDice.map(die => die.id === myDie.id ? {\n        ...die,\n        isHeld: !die.isHeld\n      } : die));\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Tenzies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"instructions\",\n        children: \"Roll until all dice are the same. Click each die to freeze it at its current value between rolls.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dice\",\n        children: dice.map(die => /*#__PURE__*/_jsxDEV(Die, {\n          isHeld: die.isHeld,\n          value: die.value,\n          holdDie: () => holdDie(die)\n        }, die.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => reroll(),\n        className: \"roll-dice\",\n        children: tenzies ? 'Play Again?' : 'Roll'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [tenzies ? 'Final ' : '', \"Score\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), tenzies && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scoreboard\",\n      children: /*#__PURE__*/_jsxDEV(ScoreBoard, {\n        scoreBoard: scoreBoard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mVz8ievYJ5kWmMHHXkxtM06l4qo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Die","ScoreBoard","nanoid","jsxDEV","_jsxDEV","App","_s","dice","setDice","allNewDice","score","setScore","tenzies","setTenzies","firstClick","setFirstClick","scoreBoard","setScoreBoard","JSON","parse","localStorage","getItem","setItem","stringify","dupe","i","length","isHeld","numArr","push","value","Math","ceil","random","id","reroll","prevScore","prevDice","map","die","holdDie","myDie","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/jackson2tall/Desktop/projectsPostCodesmith/scrimba-tenzies/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Die from './components/Die.jsx';\nimport ScoreBoard from './components/ScoreBoard.jsx';\nimport { nanoid } from 'nanoid';\n\nfunction App() {\n  const [dice, setDice] = useState(allNewDice());\n  const [score, setScore] = useState(0);\n  const [tenzies, setTenzies] = useState(false);\n  const [firstClick, setFirstClick] = useState(0);\n  const [scoreBoard, setScoreBoard] = useState(\n    () => JSON.parse(localStorage.getItem('scores')) || []\n  );\n\n  useEffect(() => {\n    localStorage.setItem('scores', JSON.stringify(scoreBoard));\n  }, [scoreBoard]);\n\n  useEffect(() => {\n    let dupe = 0;\n    for (let i = 0; i < dice.length; i++) {\n      if (dice[i].isHeld) {\n        dupe += 1;\n      }\n    }\n    dupe === 0 && setFirstClick(0);\n    dupe === 10 ? setTenzies(true) : setTenzies(false);\n  }, [dice]);\n\n  function allNewDice() {\n    const numArr = [];\n    for (let i = 0; i < 10; i++) {\n      numArr.push({\n        value: Math.ceil(Math.random() * 6),\n        isHeld: false,\n        id: nanoid(),\n      });\n    }\n    return numArr;\n  }\n\n  function reroll() {\n    if (!tenzies) {\n      setScore((prevScore) => prevScore + 1);\n      setDice((prevDice) =>\n        prevDice.map((die) =>\n          die.isHeld ? die : { ...die, value: Math.ceil(Math.random() * 6) }\n        )\n      );\n    } else {\n      setScore(0);\n      setFirstClick(0);\n      setDice(allNewDice());\n    }\n  }\n\n  function holdDie(myDie) {\n    if (firstClick === 0 || firstClick === myDie.value) {\n      setFirstClick(myDie.value);\n      setDice((prevDice) =>\n        prevDice.map((die) =>\n          die.id === myDie.id ? { ...die, isHeld: !die.isHeld } : die\n        )\n      );\n    }\n  }\n\n  return (\n    <div>\n      <h1 className='title'>Tenzies</h1>\n      <main className='main'>\n        <p className='instructions'>\n          Roll until all dice are the same. Click each die to freeze it at its\n          current value between rolls.\n        </p>\n        <div className='dice'>\n          {dice.map((die) => (\n            <Die\n              isHeld={die.isHeld}\n              value={die.value}\n              key={die.id}\n              holdDie={() => holdDie(die)}\n            />\n          ))}\n        </div>\n        <button onClick={() => reroll()} className='roll-dice'>\n          {tenzies ? 'Play Again?' : 'Roll'}\n        </button>\n        <div className='score'>\n          <h4>{tenzies ? 'Final ' : ''}Score</h4>\n          <h3>{score}</h3>\n        </div>\n      </main>\n      {tenzies && (\n        <div className='scoreboard'>\n          <ScoreBoard scoreBoard={scoreBoard} />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,sBAAsB;AACtC,OAAOC,UAAU,MAAM,6BAA6B;AACpD,SAASC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAACW,UAAU,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAC1C,MAAMoB,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,EACtD,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACdqB,YAAY,CAACE,OAAO,CAAC,QAAQ,EAAEJ,IAAI,CAACK,SAAS,CAACP,UAAU,CAAC,CAAC;EAC5D,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhBjB,SAAS,CAAC,MAAM;IACd,IAAIyB,IAAI,GAAG,CAAC;IACZ,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGlB,IAAI,CAACmB,MAAM,EAAED,CAAC,EAAE,EAAE;MACpC,IAAIlB,IAAI,CAACkB,CAAC,CAAC,CAACE,MAAM,EAAE;QAClBH,IAAI,IAAI,CAAC;MACX;IACF;IACAA,IAAI,KAAK,CAAC,IAAIT,aAAa,CAAC,CAAC,CAAC;IAC9BS,IAAI,KAAK,EAAE,GAAGX,UAAU,CAAC,IAAI,CAAC,GAAGA,UAAU,CAAC,KAAK,CAAC;EACpD,CAAC,EAAE,CAACN,IAAI,CAAC,CAAC;EAEV,SAASE,UAAUA,CAAA,EAAG;IACpB,MAAMmB,MAAM,GAAG,EAAE;IACjB,KAAK,IAAIH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC3BG,MAAM,CAACC,IAAI,CAAC;QACVC,KAAK,EAAEC,IAAI,CAACC,IAAI,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;QACnCN,MAAM,EAAE,KAAK;QACbO,EAAE,EAAEhC,MAAM,CAAC;MACb,CAAC,CAAC;IACJ;IACA,OAAO0B,MAAM;EACf;EAEA,SAASO,MAAMA,CAAA,EAAG;IAChB,IAAI,CAACvB,OAAO,EAAE;MACZD,QAAQ,CAAEyB,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;MACtC5B,OAAO,CAAE6B,QAAQ,IACfA,QAAQ,CAACC,GAAG,CAAEC,GAAG,IACfA,GAAG,CAACZ,MAAM,GAAGY,GAAG,GAAG;QAAE,GAAGA,GAAG;QAAET,KAAK,EAAEC,IAAI,CAACC,IAAI,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC;MAAE,CACnE,CACF,CAAC;IACH,CAAC,MAAM;MACLtB,QAAQ,CAAC,CAAC,CAAC;MACXI,aAAa,CAAC,CAAC,CAAC;MAChBP,OAAO,CAACC,UAAU,CAAC,CAAC,CAAC;IACvB;EACF;EAEA,SAAS+B,OAAOA,CAACC,KAAK,EAAE;IACtB,IAAI3B,UAAU,KAAK,CAAC,IAAIA,UAAU,KAAK2B,KAAK,CAACX,KAAK,EAAE;MAClDf,aAAa,CAAC0B,KAAK,CAACX,KAAK,CAAC;MAC1BtB,OAAO,CAAE6B,QAAQ,IACfA,QAAQ,CAACC,GAAG,CAAEC,GAAG,IACfA,GAAG,CAACL,EAAE,KAAKO,KAAK,CAACP,EAAE,GAAG;QAAE,GAAGK,GAAG;QAAEZ,MAAM,EAAE,CAACY,GAAG,CAACZ;MAAO,CAAC,GAAGY,GAC1D,CACF,CAAC;IACH;EACF;EAEA,oBACEnC,OAAA;IAAAsC,QAAA,gBACEtC,OAAA;MAAIuC,SAAS,EAAC,OAAO;MAAAD,QAAA,EAAC;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClC3C,OAAA;MAAMuC,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACpBtC,OAAA;QAAGuC,SAAS,EAAC,cAAc;QAAAD,QAAA,EAAC;MAG5B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJ3C,OAAA;QAAKuC,SAAS,EAAC,MAAM;QAAAD,QAAA,EAClBnC,IAAI,CAAC+B,GAAG,CAAEC,GAAG,iBACZnC,OAAA,CAACJ,GAAG;UACF2B,MAAM,EAAEY,GAAG,CAACZ,MAAO;UACnBG,KAAK,EAAES,GAAG,CAACT,KAAM;UAEjBU,OAAO,EAAEA,CAAA,KAAMA,OAAO,CAACD,GAAG;QAAE,GADvBA,GAAG,CAACL,EAAE;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEZ,CACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN3C,OAAA;QAAQ4C,OAAO,EAAEA,CAAA,KAAMb,MAAM,CAAC,CAAE;QAACQ,SAAS,EAAC,WAAW;QAAAD,QAAA,EACnD9B,OAAO,GAAG,aAAa,GAAG;MAAM;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC,eACT3C,OAAA;QAAKuC,SAAS,EAAC,OAAO;QAAAD,QAAA,gBACpBtC,OAAA;UAAAsC,QAAA,GAAK9B,OAAO,GAAG,QAAQ,GAAG,EAAE,EAAC,OAAK;QAAA;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvC3C,OAAA;UAAAsC,QAAA,EAAKhC;QAAK;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,EACNnC,OAAO,iBACNR,OAAA;MAAKuC,SAAS,EAAC,YAAY;MAAAD,QAAA,eACzBtC,OAAA,CAACH,UAAU;QAACe,UAAU,EAAEA;MAAW;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACzC,EAAA,CA/FQD,GAAG;AAAA4C,EAAA,GAAH5C,GAAG;AAiGZ,eAAeA,GAAG;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}