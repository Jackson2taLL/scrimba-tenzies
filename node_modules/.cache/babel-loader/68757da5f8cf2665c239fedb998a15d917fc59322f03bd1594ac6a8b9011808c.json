{"ast":null,"code":"var _jsxFileName = \"/Users/jackson2tall/Desktop/projectsPostCodesmith/scrimba-tenzies/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Die from './components/Die.jsx';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [dice, setDice] = useState(allNewDice());\n  const [score, setScore] = useState(0);\n  function allNewDice() {\n    const numArr = [];\n    for (let i = 0; i < 10; i++) {\n      numArr.push({\n        value: Math.ceil(Math.random() * 6),\n        isHeld: false,\n        id: nanoid()\n      });\n    }\n    return numArr;\n  }\n  function reroll() {\n    setScore(prevScore => prevScore + 1);\n    setDice(prevDice => prevDice.map(die => die.isHeld ? die : {\n      ...die,\n      value: Math.ceil(Math.random() * 6)\n    }));\n  }\n  function holdDie(id) {\n    setDice(prevDice => prevDice.map(die => die.id === id ? {\n      ...die,\n      isHeld: !die.isHeld\n    } : die));\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"instructions\",\n      children: \"Roll until all dice are the same. Click each die to freeze it at its current value between rolls.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dice\",\n      children: dice.map(die => /*#__PURE__*/_jsxDEV(Die, {\n        isHeld: die.isHeld,\n        value: die.value,\n        holdDie: () => holdDie(die.id)\n      }, die.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => reroll(),\n      className: \"roll-dice\",\n      children: \"Roll\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Score\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"LYWL2B586RjEJnIbxfmSrzQcLfo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Die","nanoid","jsxDEV","_jsxDEV","App","_s","dice","setDice","allNewDice","score","setScore","numArr","i","push","value","Math","ceil","random","isHeld","id","reroll","prevScore","prevDice","map","die","holdDie","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/jackson2tall/Desktop/projectsPostCodesmith/scrimba-tenzies/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Die from './components/Die.jsx';\nimport { nanoid } from 'nanoid';\n\nfunction App() {\n  const [dice, setDice] = useState(allNewDice());\n  const [score, setScore] = useState(0);\n\n  function allNewDice() {\n    const numArr = [];\n    for (let i = 0; i < 10; i++) {\n      numArr.push({\n        value: Math.ceil(Math.random() * 6),\n        isHeld: false,\n        id: nanoid(),\n      });\n    }\n    return numArr;\n  }\n\n  function reroll() {\n    setScore((prevScore) => prevScore + 1);\n    setDice((prevDice) =>\n      prevDice.map((die) =>\n        die.isHeld ? die : { ...die, value: Math.ceil(Math.random() * 6) }\n      )\n    );\n  }\n\n  function holdDie(id) {\n    setDice((prevDice) =>\n      prevDice.map((die) =>\n        die.id === id ? { ...die, isHeld: !die.isHeld } : die\n      )\n    );\n  }\n\n  return (\n    <main className='main'>\n      <p className='instructions'>\n        Roll until all dice are the same. Click each die to freeze it at its\n        current value between rolls.\n      </p>\n      <div className='dice'>\n        {dice.map((die) => (\n          <Die\n            isHeld={die.isHeld}\n            value={die.value}\n            key={die.id}\n            holdDie={() => holdDie(die.id)}\n          />\n        ))}\n      </div>\n      <button onClick={() => reroll()} className='roll-dice'>\n        Roll\n      </button>\n      <div className='score'>\n        <h4>Score</h4>\n        <h3>{score}</h3>\n      </div>\n    </main>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}